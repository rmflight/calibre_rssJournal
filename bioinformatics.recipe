from calibre.web.feeds.news import BasicNewsRecipe
from calibre.ebooks.BeautifulSoup import BeautifulSoup
import re
import inspect

class BioinformaticsRecipe(BasicNewsRecipe):
  
    title = u'Bioinformatics Journal'
    __author__ = 'Robert M Flight'
    language = 'en'
    oldest_article = 365
    feeds = [('Bioinformatics', 'https://dl.dropbox.com/s/m16gxh35ekf4qkk/bioinformatics_recent_test.rss')]
    #recursions = 1 # see if this gets us the table pages
    articles_are_obfuscated = True
    
    remove_tags_before = dict(attrs={'class':'article fulltext-view'})
    remove_tags_after = dict(attrs={'id':'related-urls'})
    
    def mod_image_paths(self, url, soup):
        # takes the full url and a BeautifulSoup instance, and modifies img paths
        url_split_char = '/'
        url_splitup = url.split(url_split_char)
        url_splitup.pop(-1)
        base_url = url_split_char.join(url_splitup)
        # this then needs to be processed, every img tag having the full url added
        # and then looking for tables and processing them
        # finally writing out the html to use
        allImg = soup.findAll('img')
        #print allImg
        for imgTag in allImg:
            tmpSrc = imgTag['src']
            tmpSrc = url_split_char.join([base_url, tmpSrc])
            if re.search('.small.gif', tmpSrc):
                tmpSrc = re.sub('.small.gif', '.large.jpg', tmpSrc)
                imgTag['width'] = 600
                
            imgTag['src'] = tmpSrc
            
        return soup
        
    def insert_tables(self, url, soup):
        # get the base url, same as we did for images
        url_split_char = '/'
        url_splitup = url.split(url_split_char)
        url_splitup.pop(-1)
        base_url = url_split_char.join(url_splitup)
        all_tables = soup.findAll('div', 'table-inline')
        print all_tables # what is going in
        for i_table in all_tables:
            a_link = i_table.find('a', 'in-nw')
            
            table_url = url_split_char.join([base_url, a_link['href']])
            table_soup = self.index_to_soup(table_url, False)
            
            table_div = table_soup.find('div', 'table-expansion')
            
            i_table.replaceWith(table_div)
            
        print all_tables # what is coming out
        return soup
        
    def print_version(self, url):
        url_rep = url.replace('/cgi', '')
        url_rep = url_rep.replace('/short', '')
        url_rep = url_rep.replace('?rss=1', '')
        dot_sep = '.'
        full_url = dot_sep.join([url_rep, 'full'])
        return full_url
        
    def get_obfuscated_article(self, url):
        #print url
        # this is the actual html of the page we are going to modify
        working_soup = self.index_to_soup(url, False)
        
        img_mod_soup = self.mod_image_paths(url, working_soup)
        
        table_mod_soup = self.insert_tables(url, working_soup)
        
        filePath = 'tmpfile.html'
        outFile = open(filePath, 'w')
        outFile.write(img_mod_soup.prettify())
        return filePath
